openapi: 3.0.3
info:
  title: Toastmasters Web API
  version: 1.0.0
  description: API documentation for Toastmasters Web application
paths:
  /api/clubs/create/:
    post:
      operationId: clubs_create_create
      description: 使用者可以提交社團的詳細資訊來建立新社團
      summary: 建立新社團
      tags:
      - Clubs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Club'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Club'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Club'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
          description: ''
        '400':
          description: 輸入資料錯誤
  /api/clubs/delete/{name}/:
    delete:
      operationId: clubs_delete_destroy
      description: 使用者可以刪除指定的社團
      summary: 刪除社團
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - Clubs
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
        '404':
          description: 找不到社團
  /api/clubs/detail/{name}/:
    get:
      operationId: clubs_detail_retrieve
      description: 使用者可以根據社團名稱獲取該社團的詳細資訊
      summary: 取得社團詳細資訊
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - Clubs
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
          description: ''
        '404':
          description: 找不到社團
  /api/clubs/list/:
    get:
      operationId: clubs_list_list
      description: 取得所有社團的列表
      summary: 取得所有社團
      tags:
      - Clubs
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Club'
          description: ''
        '404':
          description: 找不到社團
  /api/clubs/update/{name}/:
    put:
      operationId: clubs_update_update
      description: 使用者可以更新指定社團的詳細資訊
      summary: 更新社團資訊
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      tags:
      - Clubs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Club'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Club'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Club'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Club'
          description: ''
        '400':
          description: 輸入資料錯誤
        '404':
          description: 找不到社團
  /api/users/login/:
    post:
      operationId: users_login_create
      description: 輸入帳號與密碼，驗證成功後回傳 access 與 refresh token
      summary: 登入
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
        '401':
          description: 帳號或密碼錯誤
  /api/users/logout/:
    post:
      operationId: users_logout_create
      description: 將 refresh token 加入黑名單，使其失效
      summary: 登出
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/register/:
    post:
      operationId: users_register_create
      description: 使用者填寫帳號、密碼、email 與 display_name 來建立新帳號，成功後回傳 JWT token 與使用者資訊
      summary: 註冊新使用者
      tags:
      - Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          description: 輸入資料錯誤
components:
  schemas:
    Club:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        location:
          type: string
          nullable: true
          maxLength: 255
        meeting_time:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Logout:
      type: object
      properties:
        refresh:
          type: string
      required:
      - refresh
    Register:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        display_name:
          type: string
      required:
      - display_name
      - email
      - password
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        display_name:
          type: string
          nullable: true
          maxLength: 100
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
